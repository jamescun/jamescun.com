<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on James Cunningham</title><link>https://jamescun.com/posts/</link><description>Recent content in Posts on James Cunningham</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 14 Mar 2022 16:26:05 +0100</lastBuildDate><atom:link href="https://jamescun.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>REST APIs with Go Generics</title><link>https://jamescun.com/posts/golang-generics-rest-api/</link><pubDate>Mon, 14 Mar 2022 16:26:05 +0100</pubDate><guid>https://jamescun.com/posts/golang-generics-rest-api/</guid><description>We&amp;rsquo;re on the verge of Go 1.18 being released, with the headline feature of Generics going mainstream after many years of discussion. But what are generics?
I am primarily involved in the development of networked services. These consist of a mixture of HTTP REST and gRPC services. A nice element of working with a gRPC service is the method signature of your endpoints are generated for you, you simply provide the implementation.</description></item></channel></rss>